«IMPORT dcmddandroid»
«EXTENSION template::android»

«DEFINE main FOR Diagram»
«EXPAND modelElement FOREACH modelElements-»
«ENDDEFINE»

«DEFINE modelElement FOR ModelElement»

«IF AbstractClass.isInstance(this)-»
	«FILE this.name + '.java'-»
	//TODO «clearName(this.metaType.toString())» «this.name»
	«IF clearName(this.metaType.toString()) == 'PersistentClass'-»
	//Note: Persistent class
	«ENDIF-»
	«this.visibilidad()-» «this.EsAbstracta()» «this.name-»
«IF Class.isInstance(this)-»
«IF((Class) this).implements.size > 0-»
 implements «FOREACH ((Class) this).implements AS implementaciones SEPARATOR ','-»
«implementaciones.implemented.name-» 
«ENDFOREACH-»
«ENDIF-»
«ENDIF-»
«IF clearName(this.metaType.toString()) == 'CycleClass'-»
 extends Activity
«ENDIF-»
	{
	«FOREACH this.eContents.typeSelect(Attribute) AS soloAtributos-»
		«IF soloAtributos.secured.toString() == 'true'-»
		@EsSeguro
		«ENDIF-»
		«soloAtributos.visibility» «EsStatic(soloAtributos)» «Esfinal(soloAtributos)» «soloAtributos.type» «soloAtributos.name»;
	«ENDFOREACH»

«LET ((Class)this) AS e»
	«IF e.associationAsSource.size >0»
		«IF e.associationAsSource.rolTarget.isEmpty.toString() == "false"»
			«e.associationAsSource.target.name» -rolTarget
		«ENDIF»
	«ELSEIF e.associationAsTarget.size >0»
		«IF e.associationAsTarget.rolSource.isEmpty.toString() != "true"»
			«e.associationAsTarget.target.name» -rolSource
		«ENDIF»
	«ENDIF»
«ENDLET»

«IF clearName(this.metaType.toString()) == 'CycleClass'-»
	@Override
	public boolean onCreate(Bundle foo){
	
		super.onCreate(foo);
	//TODO onCreate
	
	}
«ENDIF-»
	«FOREACH this.eContents.typeSelect(Method) AS soloMetodos»
	«soloMetodos.visibility» «soloMetodos.returns» «soloMetodos.name»(«FOREACH soloMetodos.parameters.typeSelect(Parameter) AS parametros SEPARATOR  ','» «parametros.type» «parametros.name»«ENDFOREACH») {
			//TODO «clearName(soloMetodos.metaType.toString())» «soloMetodos.name»
			}
	«ENDFOREACH»
	}
	«ENDFILE»
«ENDIF»
«IF Enum.isInstance(this)»
	«FILE this.name + '.java'-»
enum «this.name»{
	«FOREACH this.eContents.typeSelect(EnumValue) AS soloEnumValue SEPARATOR ','-»
«soloEnumValue.name-»
	«ENDFOREACH-»}
	«ENDFILE»
«ENDIF»
«IF Interface.isInstance(this)»
	«FILE this.name + '.java'-»
interface «this.name»{
	«FOREACH this.eContents.typeSelect(Method) AS soloMetodos»
	«soloMetodos.visibility» «soloMetodos.returns» «soloMetodos.name»(«FOREACH soloMetodos.parameters.typeSelect(Parameter) AS parametros SEPARATOR  ','» «parametros.type» «parametros.name»«ENDFOREACH»);
	«ENDFOREACH»
	}«ENDFILE»
«ENDIF»
	
«ENDDEFINE»
